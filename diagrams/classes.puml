@startuml
'https://plantuml.com/class-diagram

abstract class BaseModel

package wikimedia {
    enum WikimediaLanguageCode {
        BASQUE
        BENGALI
        BOKMÅL
        CZECH
        DANISH
        ENGLISH
        ESTONIAN
        FRENCH
        GERMAN
        HEBREW
        LATIN
        MALAYALAM
        RUSSIAN
        SWEDISH
    }
    enum WikimediaLanguageQID {
        BASQUE = "Q8752"
        BENGALI = "Q9610"
        BOKMÅL = "Q25167"
        CZECH = "Q9056"
        DANISH = "Q9035"
        ENGLISH = "Q1860"
        ESTONIAN = "Q9072"
        FRENCH = "Q150"
        GERMAN = "Q188"
        HEBREW = "Q9288"
        LATIN = "Q397"
        MALAYALAM = "Q36236"
        RUSSIAN = "Q7737"
        SWEDISH = "Q9027"
    }
    package wikidata {
        class Entity {
        id: Optional[str]
        label: str
        upload_one_statement_to_wikidata()
        url()
        }
        class EntityID{
        letter: WikidataNamespaceLetters
            rest: str
        __str__()
        }
        abstract class Query{
            __execute__()
            __parse_results__()
            __prepare_and_build_query__()
            __strip_bad_chars__()
            get_results()
            print_number_of_results()
        }
        class PreprintArticleQuery {
            __prepare_and_build_query__()
        }
        class RiksdagenDocumentQuery {
            __prepare_and_build_query__()
        }
        class PublishedArticleQuery {
            __build_query__()
            __check_we_got_everything_we_need__()
            __prepare_and_build_query__()
            __setup_cirrussearch_params__()
        }
        class SparqlItem{
            item: Value
            itemLabel: Value
            validate_qid_and_copy_label()
        }
        class MainSubjectItem {
            item: Item = None
            search_strings: List[str] = None
            task: Task = None
            args: argparse.Namespace = None
            __init__()
            __str__()
            add_to_items()
            extract_search_strings()
            search_urls ())
        }
        class Item{
            label: Optional[str] = None
            description: Optional[str] = None
            aliases: Optional[List[str]] = None
            __init__()
            __str__()
            parse_json()
            parse_from_wdqs_json()
            fetch_label_and_description_and_aliases()
        }
        enum WikidataGrammaticalFeature {
            ACTIVE_VOICE
            DEFINITE
            GENITIVE_CASE
            IMPERATIVE
            INDEFINITE
            INFINITIVE
            NOMINATIVE_CASE
            PASSIVE_VOICE
            PLURAL
            PRESENT_TENSE
            PRETERITE
            SIMPLE_PRESENT
            SINGULAR
            SUPINE
            THIRD_PERSON_SINGULAR
        }
'        enum WikidataLexicalCategory {
'            ADJECTIVE
'            ADVERB
'            AFFIX
'            NOUN
'            PROPER_NOUN
'            VERB
'        }
'        enum WikidataNamespaceLetters {
'            ITEM
'            LEXEME
'            PROPERTY
'        }
    }
}
package items {
    abstract class Items {
        execute_queries()
        fetch_based_on_label()
        number_of_sparql_items()
        print_items_list()
        print_total_items()
        random_shuffle_items()
        remove_duplicates()
    }
    class RiksdagenDocumentItems {
execute_queries()
fetch_based_on_label()
    }
    class ScholarlyArticleItems {
execute_queries()
fetch_based_on_label()
    }
}

class Task {
    best_practice_information: Union[str, None] = None
    id: TaskIds = None
    label: str = None
    language_code: SupportedLanguageCode = None
    number_of_queries_per_search_string = 1
    __str__()
}

class BatchJobs {
job_count
jobs: List[BatchJob]
print_running_jobs()
run_jobs()
}

class BatchJob {
    +suggestion: Suggestion
    +items: Items
    run()
}
class ItemSubjector {
    export_jobs_to_dataframe()
    match_main_subjects_from_sparql()
    run()
}
'Items <|-- AcademicJournalItems
Items <|-- RiksdagenDocumentItems
Items <|-- ScholarlyArticleItems
'Items <|-- ThesisItems
BaseModel <|-- Entity
BaseModel <|-- Task
BaseModel <|-- BatchJob
BaseModel <|-- BatchJobs
BaseModel <|-- Items
BaseModel <|-- ItemSubjector
Entity <|-- Item
Item <|-- SparqlItem
Item <|-- MainSubjectItem
Query <|-- PreprintArticleQuery
Query <|-- PublishedArticleQuery
Query <|-- RiksdagenDocumentQuery

@enduml